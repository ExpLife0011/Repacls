{
  "name": "Repacls",
  "tagline": "Windows File Security Utility",
  "body": "# Repacls Usage Information\r\n\r\nLink To Latest Binaries: [Here](https://github.com/NoMoreFood/Repacls/files/387976/Repacls.Binaries.-.v1.1.0.0.zip)\r\n\r\n```\r\nrepacls.exe /Path <Absolute Path> ... other options ....\r\n\r\nRepacls was developed to address large scale migrations, transitions, health\r\nchecks, and access control optimizations.  Repacls is multi-threaded and\r\nemploys account name caching to accelerate operation on large file servers\r\nwith millions of files.  It was developed to address a variety of platform\r\nlimitations, resource consumption concerns, and bugs within xcacls, icacls,\r\nsetacl, and subinacl.\r\n\r\nImportant: Unless otherwise specified, all repacls commands are recursive.\r\n\r\nRepacls must be executed with administrator permissions and will attempt to\r\nacquire the backup, restore, and take ownership privileges during its\r\nexecution.\r\n\r\nAny command line parameter that accepts an account or domain name can also use\r\na SID string instead of the name.  This may be necessary if working with an\r\naccount or domain that is no longer resolvable.\r\n\r\nGlobal Options\r\n==============\r\nGlobal Options affect the entire command regardless of where they appear in the\r\npassed command line.  It is recommended to include them at the very beginning\r\nor end of your command as to not confuse them with ordered parameters.\r\n\r\n/Path\r\n   Specifies the file or directory to process.  If a directory, the directory\r\n   is processed recursively; all operations specified affect the directory\r\n   and all files and folders under the directory (unless otherwise specified).\r\n   This parameter is mandatory.\r\n\r\n/Quiet\r\n   Hides all non-error output. This option will greatly enhance performance if\r\n   a large number of changes are being processed.  Alternatively, it is\r\n   advisable to redirect console output to a file (using the > redirector) if\r\n  /Quiet cannot be specified.\r\n\r\n/Threads <NumberOfThreads>\r\n   Specifies the number of threads to use while processing.  The default value\r\n   of  '5' is usually adequate, but can be increased if performing changes\r\n   over a higher-latency connection.  Since changes to a parent directory\r\n   often affect the inherited security on children, the security of children\r\n   objects are always processed after the the security on their parent objects\r\n   are fully processed.\r\n\r\n/WhatIf\r\n   This option will analyze security and report on any potential changes\r\n   without actually committing the data.  Use of /WhatIf is recommended for\r\n   those first using the tool.\r\n\r\n/NoHiddenSystem\r\n   Use this option to avoid processing any file marked as both 'hidden' and\r\n   'system'.  These are what Windows refers to 'operating system protected\r\n   files' in Windows Explorer.\r\n\r\nOrdered Options\r\n===============\r\nOrdered Options are executed on each SID encountered in the security descriptor\r\nin the order they are specified on the command line.  Executing commands in\r\nthis way is preferable to multiple commands because the security descriptor is\r\nonly read and written once for the entire command which is especially helpful\r\nfor large volumes.\r\n\r\nCommands That Do Not Alter Security\r\n-----------------------------------\r\n/PrintDescriptor\r\n   Prints out the security descriptor to the screen.  This is somewhat useful\r\n   for  seeing the under-the-cover changes to the security descriptor before\r\n   and after a particular command.\r\n\r\n/CheckCanonical\r\n   This command inspects the DACL and SACL for canonical order compliance\r\n   (i.e., the rules in the ACL are ordered as explicitly deny, explicitly allow,\r\n   inherited deny, inherited allow).  If non-canonical entries are detected,\r\n   it is recommended to inspect the ACL with icacls.exe or Windows Explorer\r\n   to ensure the ACL is not corrupted in a more significant way.\r\n\r\n/ExportDescriptor <FileName>\r\n   Export the security descriptor to the file specified.  The file is\r\n   outputted in the format of file|descriptor on each line.  The security\r\n   descriptor is formated as specified in the documentation for\r\n   ConvertSecurityDescriptorToStringSecurityDescriptor().\r\n\r\n/FindAccount <Name|Sid>\r\n   Reports any instance of an account specified.\r\n\r\n/FindDomain <Name|Sid>\r\n   Reports any instance of an account matching the specified domain.\r\n\r\n/FindNullAcl\r\n   Reports any instance of a null ACL.  A null ACL, unlike an empty ACL, allows\r\n   all access (i.e., similar to an ACE with 'Everyone' with 'Full Control')\r\n\r\nCommands That Can Alter Security (When /WhatIf Is Not Present)\r\n--------------------------------\r\n/AddAccountIfMissing <Name|Sid>\r\n   This command will ensure the account specified has full control access to\r\n   path and all directories/files under the path either via explicit or\r\n   inherited permissions.  This command does not take into account any\r\n   permissions that would be granted to the specified user via group\r\n   membership.  If the account does not have access, access is\r\n   granted.  This command is useful to correct issues where a user or\r\n   administrator has mistakenly removed an administrative group from some\r\n   directories.\r\n\r\n/Compact\r\n   This command will look for mergeable entires in the security descriptor and\r\n   merge them.  For example, running icacls.exe <file> /grant Everyone:R\r\n   followed by icacls.exe <file> /grant Everyone:(CI)(OI)(R) will produce\r\n   two entries even those the second command supersedes the first one.\r\n   Windows Explorer automatically merges these entries when display security\r\n   information so you have to use other utilities to detect these\r\n   inefficiencies.  While these's nothing inherently wrong with these\r\n   entires, it possible for them to result file system is performance\r\n   degradation.\r\n\r\n/MigrateDomain <SourceDomainName>:<TargetDomainName>\r\n        This command will look to see whether any account in <SourceDomain>\r\n    has an identically-named account in <TargetDomain>.  If so, any entires\r\n     are converted to use the new domain.  For example,\r\n    'OldDomain\\Domain Admins' would become 'NewDomain\\Domain Admins'.  Since\r\n    this operation relies on the names being resolvable, specifying a SID\r\n    instead of domain name for this command does not work.\r\n\r\n/RemoveAccount <Name|Sid>\r\n    Will remove <Name> from the security descriptor.  If the specified name\r\n    is found as the file owner, the owner is replaced by the builtin\r\n    Administrators group.  If the specified name is found as the group owner\r\n    (a defunct attribute that has no function in terms of security), it is\r\n    also replace with the built-in Administrators group.\r\n\r\n/RemoveOrphans <Domain|Sid>\r\n   Remove any account whose SID is derived from the <Domain> specified\r\n   and can no longer be resolved to a valid name.\r\n\r\n/RemoveRedundant\r\n   This command will remove any explicit permission that is redundant of\r\n   of the permissions its already given through inheritance.  This option\r\n   helps recovered from the many individual explicit permissions that may\r\n   have been littered from the old cacls.exe command that didn't\r\n   understand how to set up inheritance.\r\n\r\n/ReplaceAccount <SearchAccount> <ReplaceAccount>\r\n   Search for an account and replace it with another account.\r\n\r\n/SetOwner <Name|Sid>\r\n   Will set the owner of the file to the name specified.\r\n\r\n/UpdateHistoricalSids\r\n   Will convert any instances of old SIDs present in the security descriptor\r\n   to there to active SID currently associated with the account.  This is\r\n   especially useful after a domain migration and prior to removing\r\n   excess SID history on accounts.\r\n\r\nExclusive Options\r\n=================\r\n/Help or /? or /H\r\n   Shows this information.\r\n\r\n/ResetChildren\r\n   This will reset all children of path to the to inherit from the parent.  It\r\n   will not affect the security of the parent.  This command does not affect\r\n   the security the root directory as specified by the /Path argument.\r\n\r\n/InheritChildren\r\n   This will cause any parent that is currently set to block inheritance to\r\n   start allowing inheritance.  Any explicit entries on the children are\r\n   preserved.  This command does not will not affect the security the root\r\n   directory as specified by the /Path argument.\r\n\r\nOther Notes & Limitations\r\n=========================\r\nTo only affect a particular part of a security descriptor, you can add on an\r\noptional ':X' parameter after the end of the account name where X is a comma\r\nseparated list of DACL,SACL, OWNER, or GROUP.  For example,\r\n'/RemoveAccount \"DOM\\joe:DACL,OWNER\"' will only cause the designated account\r\nto be removed from the DACL and OWNER parts of the security descriptor.\r\n\r\nExamples\r\n========\r\n- Replace all instances of DOM\\jack to DOM\\jill in C:\\test:\r\n  repacls.exe /Path C:\\Test /ReplaceAccount \"DOM\\jack:DOM\\jill\"\r\n\r\n- Migrate all permissions for all accounts with matching\r\n  names in DOMA with DOMB:\r\n  repacls.exe /Path C:\\Test /MigrateDomain DOMA:DOMB\r\n\r\n- Update old SID references, remove any explicit permissions that are already\r\n  granted by inherited permissions, and compact all ACLs if not compacted:\r\n  repacls.exe /Path C:\\Test /UpdateHistoricalSids /RemoveRedundant /Compact\r\n\r\nType 'repacls.exe /? | more' to scroll this documentation.\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}